
services:

#  nginx:
#    container_name: cflow-nginx
#    build:
#      context: ./deployment/nginx
#      args:
        # reference the app target in this compose file
#        APP: app  # do not change me
#    env_file:
      # load Certbot configs
#      - deployment/certbot.env
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - /etc/letsencrypt:/etc/letsencrypt

  app:
    container_name: cflow_app
    build:
      dockerfile: ./deployment/cflow/Dockerfile
      context: .
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-myapp}:${DB_PASSWORD:-changeme}@db:5432/${DB_NAME:-myapp_db}
#    ports:
#      - 8080:8080
    restart: unless-stopped

######temporaire sft.olivier-farges.xyz
    networks:
      - mailu_default:
        -external: true
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.conferenceflow.rule=Host(`sft.olivier-farges.xyz`)"
      - "traefik.http.routers.conferenceflow.entrypoints=websecure"
      - "traefik.http.routers.conferenceflow.tls.certresolver=letsencrypt"
#########################


  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${DB_USER:-myapp}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
      - POSTGRES_DB=${DB_NAME:-myapp_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data: